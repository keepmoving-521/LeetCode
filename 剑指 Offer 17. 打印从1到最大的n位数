"""
输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。
比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。

示例 1:

输入: n = 1
输出: [1,2,3,4,5,6,7,8,9]
 

说明：

用返回一个整数列表来代替打印
n 为正整数
"""
#  方法一：
class Solution(object):
    def printNumbers(self, n):
        """
        :type n: int
        :rtype: List[int]
        """
        list1 = []
        for i in range(10**n-1):
            list1.append(i+1)
        return list1
#  方法二：
class Solution(object):
    def printNumbers(self, n):
        """
        :type n: int
        :rtype: List[int]
        """
        return [i for i in range(1, 10**n)]
"""
解题思路：
题目要求打印 “从 1 至最大的 n 位数的列表” ，因此需考虑以下两个问题：

最大的 n 位数（记为 end ）和位数 n 的关系： 例如最大的 1 位数是 9 ，最大的 2 位数是 99 ，最大的 3 位数是 999 。则可推出公式：
end = 10^n - 1
大数越界问题： 当 n 较大时，end会超出 int32 整型的取值范围，超出取值范围的数字无法正常存储。
但由于本题要求返回 int 类型数组，相当于默认所有数字都在 int32 整型取值范围内，因此不考虑大数越界问题。
因此，只需定义区间 [1, 10^n - 1] 和步长 1 ，通过 for 循环生成结果列表 res 并返回即可。

复杂度分析：
时间复杂度 O(10^n)： 生成长度为 10^n的列表需使用 O(10^n)时间。
空间复杂度 O(1) ： 建立列表需使用 O(1)大小的额外空间（ 列表作为返回结果，不计入额外空间 ）。
利用 Python 的语言特性，可以简化代码：先使用 range() 方法生成可迭代对象，再使用 list() 方法转化为列表并返回即可。

"""
